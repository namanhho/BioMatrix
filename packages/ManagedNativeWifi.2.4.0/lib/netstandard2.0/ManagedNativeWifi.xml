<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagedNativeWifi</name>
    </assembly>
    <members>
        <member name="T:ManagedNativeWifi.AuthenticationAlgorithm">
            <summary>
            Authentication algorithm
            </summary>
            <remarks>
            Equivalent to DOT11_AUTH_ALGORITHM:
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/dot11-auth-algorithm
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.Unknown">
            <summary>
            Unknown (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.Open">
            <summary>
            802.11 Open System authentication algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.Shared">
            <summary>
            802.11 Shared Key authentication algorithm that uses pre-shared Wired Equivalent Privacy (WEP) key
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.WPA">
            <summary>
            Wi-Fi Protected Access (WPA) algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.WPA_PSK">
            <summary>
            WPA algorithm that uses pre-shared keys (PSK)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.WPA_NONE">
            <summary>
            Note supported
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.RSNA">
            <summary>
            802.11i Robust Security Network Association (RSNA) algorithm (WPA2 is one such algorithm.)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.RSNA_PSK">
            <summary>
            802.11i RSNA algorithm that uses PSK
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.WPA3">
            <summary>
            WPA3 algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.WPA3_SAE">
            <summary>
            WPA3 Simultaneous Authentication of Equals (SAEï¼‰algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.OWE">
            <summary>
            Opportunistic Wireless Encryption (OWE) algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.IHV_START">
            <summary>
            Indicates the start of the range that specifies proprietary authentication algorithms developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationAlgorithm.IHV_END">
            <summary>
            Indicates the end of the range that specifies proprietary authentication algorithms developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.AuthenticationMethod">
            <summary>
            Authentication method to be used to connect to wireless LAN
            </summary>
            <remarks>
            Equivalent to authentication element in profile XML:
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/wlan-profileschema-authentication-authencryption-element
            WPA3 values are found in:
            https://docs.microsoft.com/en-us/uwp/api/windows.networking.connectivity.networkauthenticationtype
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.Unknown">
            <summary>
            Unknown (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.Open">
            <summary>
            Open 802.11 authentication
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.Shared">
            <summary>
            Shared 802.11 authentication
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA_Enterprise">
            <summary>
            WPA-Enterprise 802.11 authentication
            </summary>
            <remarks>WPA in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA_Personal">
            <summary>
            WPA-Personal 802.11 authentication
            </summary>
            <remarks>WPAPSK in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA2_Enterprise">
            <summary>
            WPA2-Enterprise 802.11 authentication
            </summary>
            <remarks>WPA2 in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA2_Personal">
            <summary>
            WPA2-Personal 802.11 authentication
            </summary>
            <remarks>WPA2PSK in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA3_Enterprise">
            <summary>
            WPA3-Enterprise 802.11 authentication
            </summary>
            <remarks>WPA3 in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA3_Personal">
            <summary>
            WPA3-Personal 802.11 authentication
            </summary>
            <remarks>WPA3SAE in profile XML</remarks>
        </member>
        <member name="T:ManagedNativeWifi.AvailabilityChangedEventArgs">
            <summary>
            Provides data for the AvailabilityChanged event.
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailabilityChangedEventArgs.InterfaceId">
            <summary>
            Associated wireless interface ID
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailabilityChangedEventArgs.ChangedState">
            <summary>
            Availability changed state
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.AvailabilityChangedEventArgs.#ctor(System.Guid,ManagedNativeWifi.AvailabilityChangedState)">
            <summary>
            Initializes a new instance of the <see cref="T:AvailabilityChangedEventArgs"/> class.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="changedState">Availability changed state</param>
        </member>
        <member name="T:ManagedNativeWifi.AvailabilityChangedState">
            <summary>
            Availability changed state
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AvailabilityChangedState.Unknown">
            <summary>
            Unknown (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AvailabilityChangedState.Available">
            <summary>
            All of the following conditions occur:
            A connectable wireless LAN is found after a scan.
            The wireless interface is in the disconnected state.
            There is no compatible auto-connect profile that can be used to connect.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AvailabilityChangedState.Unavailable">
            <summary>
            No connectable wireless LAN is found after a scan.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.AvailableNetworkPack">
            <summary>
            Wireless LAN information on available network
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.Interface">
            <summary>
            Associated wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.Ssid">
            <summary>
            SSID (maximum 32 bytes)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.BssType">
            <summary>
            BSS network type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.SignalQuality">
            <summary>
            Signal quality (0-100)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.IsSecurityEnabled">
            <summary>
            Whether security is enabled on this network
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.ProfileName">
            <summary>
            Associated wireless profile name
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.AuthenticationAlgorithm">
            <summary>
            Default authentication algorithm to be used to connect to this network for the first time
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.CipherAlgorithm">
            <summary>
            Default cipher algorithm to be used to connect to this network
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.AvailableNetworkPack.#ctor(ManagedNativeWifi.InterfaceInfo,ManagedNativeWifi.NetworkIdentifier,ManagedNativeWifi.BssType,System.Int32,System.Boolean,System.String,ManagedNativeWifi.AuthenticationAlgorithm,ManagedNativeWifi.CipherAlgorithm)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.AvailableNetworkGroupPack">
            <summary>
            Wireless LAN information on available network and group of associated BSS networks
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkGroupPack.BssNetworks">
            <summary>
            Associated BSS networks information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkGroupPack.PhyType">
            <summary>
            PHY type of associated BSS network which is the highest link quality
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkGroupPack.LinkQuality">
            <summary>
            Link quality of associated BSS network which is the highest link quality
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkGroupPack.Frequency">
            <summary>
            Frequency (KHz) of associated BSS network which has the highest link quality
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkGroupPack.Band">
            <summary>
            Frequency band (GHz) of associated BSS network which has the highest link quality
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkGroupPack.Channel">
            <summary>
            Channel of associated BSS network which has the highest link quality
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.AvailableNetworkGroupPack.#ctor(ManagedNativeWifi.InterfaceInfo,ManagedNativeWifi.NetworkIdentifier,ManagedNativeWifi.BssType,System.Int32,System.Boolean,System.String,ManagedNativeWifi.AuthenticationAlgorithm,ManagedNativeWifi.CipherAlgorithm,System.Collections.Generic.IEnumerable{ManagedNativeWifi.BssNetworkPack})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.BssNetworkPack">
            <summary>
            Wireless LAN information on BSS network
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Interface">
            <summary>
            Associated wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Ssid">
            <summary>
            SSID (maximum 32 bytes)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.BssType">
            <summary>
            BSS network type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Bssid">
            <summary>
            BSSID (6 bytes)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.PhyType">
            <summary>
            PHY type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.SignalStrength">
            <summary>
            Signal strength (RSSI)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.LinkQuality">
            <summary>
            Link quality (0-100)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Frequency">
            <summary>
            Frequency (KHz)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Band">
            <summary>
            Frequency band (GHz)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.BssNetworkPack.#ctor(ManagedNativeWifi.InterfaceInfo,ManagedNativeWifi.NetworkIdentifier,ManagedNativeWifi.BssType,ManagedNativeWifi.NetworkIdentifier,ManagedNativeWifi.PhyType,System.Int32,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.BssType">
            <summary>
            BSS network type
            </summary>
            <remarks>
            Partly equivalent to DOT11_BSS_TYPE:
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/dot11-bss-type
            Also equivalent to connectionType element in profile XML:
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/wlan-profileschema-connectiontype-wlanprofile-element
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.BssType.None">
            <summary>
            None (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.BssType.Infrastructure">
            <summary>
            Infrastructure BSS network
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.BssType.Independent">
            <summary>
            Independent BSS (IBSS) network (Ad hoc network)
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.BssTypeConverter.TryConvert(ManagedNativeWifi.Win32.NativeMethod.DOT11_BSS_TYPE,ManagedNativeWifi.BssType@)">
            <summary>
            Converts from DOT11_BSS_TYPE value.
            </summary>
            <param name="source">DOT11_BSS_TYPE value</param>
            <param name="bssType">BssType value</param>
            <returns>True if successfully converts</returns>
        </member>
        <member name="M:ManagedNativeWifi.BssTypeConverter.TryParse(System.String,ManagedNativeWifi.BssType@)">
            <summary>
            Converts from connectionType element in profile XML.
            </summary>
            <param name="source">connectionType element</param>
            <param name="bssType">BssType value</param>
            <returns>True if successfully converts</returns>
        </member>
        <member name="T:ManagedNativeWifi.CipherAlgorithm">
            <summary>
            Cipher algorithm for data encryption and decryption
            </summary>
            <remarks>
            Equivalent to DOT11_CIPHER_ALGORITHM:
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/dot11-cipher-algorithm
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.None">
            <summary>
            No cipher algorithm is enabled or supported.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.WEP">
            <summary>
            Wired Equivalent Privacy (WEP) algorithm with a cipher key of any length
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.WEP40">
            <summary>
            WEP algorithm with a 40-bit cipher key
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.WEP104">
            <summary>
            WEP algorithm with a 104-bit cipher key
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.TKIP">
            <summary>
            Temporal Key Integrity Protocol (TKIP) algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.CCMP">
            <summary>
            AES-CCMP algorithm
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.WPA_USE_GROUP">
            <summary>
            Wi-Fi Protected Access (WPA) Use Group Key cipher suite
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.RSN_USE_GROUP">
            <summary>
            Robust Security Network (RSN) Use Group Key cipher suite (not used)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.IHV_START">
            <summary>
            Indicates the start of the range that specifies proprietary cipher algorithms developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.CipherAlgorithm.IHV_END">
            <summary>
            Indicates the end of the range that specifies proprietary cipher algorithms developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.Common.DisposableContainer`1">
            <summary>
            Container of disposable object
            </summary>
            <typeparam name="T">Disposable object type</typeparam>
            <remarks>
            If a disposable object is given as content when this container is instantiated,
            the content object will not be disposed when this container is disposed.
            In contrast, if no disposable object is given (if it is default, in the case of class, null)
            as content when this container is instantiated, a new disposable object is instantiated
            instead and the content object will be disposed when this container is disposed.
            </remarks>
        </member>
        <member name="T:ManagedNativeWifi.ConnectionChangedEventArgs">
            <summary>
            Provides data for the ConnectionChanged event.
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionChangedEventArgs.InterfaceId">
            <summary>
            Associated wireless interface ID
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionChangedEventArgs.ChangedState">
            <summary>
            Connection changed state
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionChangedEventArgs.Data">
            <summary>
            Connection notification data
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.ConnectionChangedEventArgs.#ctor(System.Guid,ManagedNativeWifi.ConnectionChangedState,ManagedNativeWifi.ConnectionNotificationData)">
            <summary>
            Initializes a new instance of the <see cref="T:ConnectionChangedEventArgs"/> class.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="changedState">Connection changed state</param>
            <param name="data">Connection notification data</param>
        </member>
        <member name="T:ManagedNativeWifi.ConnectionChangedState">
            <summary>
            Connection changed state
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionChangedState.Unknown">
            <summary>
            Unknown (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionChangedState.Started">
            <summary>
            A connection attempt has started.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionChangedState.Completed">
            <summary>
            A connection has completed.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionChangedState.Failed">
            <summary>
            A connection attempt has failed.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionChangedState.Disconnecting">
            <summary>
            The current connection is disconnecting.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionChangedState.Disconnected">
            <summary>
            The current connection has disconnected.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.ConnectionMode">
            <summary>
            Connection mode
            </summary>
            <remarks>
            Equivalent to WLAN_CONNECTION_MODE:
            https://docs.microsoft.com/en-us/windows/win32/api/wlanapi/ne-wlanapi-wlan_connection_mode
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionMode.Invalid">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionMode.Profile">
            <summary>
            A profile will be used to make the connection.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionMode.TemporaryProfile">
            <summary>
            A temporary profile will be used to make the connection.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionMode.DiscoverySecure">
            <summary>
            Secure discovery will be used to make the connection.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionMode.DiscoveryUnsecure">
            <summary>
            Unsecure discovery will be used to make the connection.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ConnectionMode.Auto">
            <summary>
            The connection is initiated by the wireless service automatically using a persistent profile.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.ConnectionNotificationData">
            <summary>
            Connection notification data
            </summary>
            <remarks>
            Partly equivalent to WLAN_CONNECTION_NOTIFICATION_DATA structure:
            https://learn.microsoft.com/en-us/windows/win32/api/wlanapi/ns-wlanapi-wlan_connection_notification_data
            </remarks>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionNotificationData.ConnectionMode">
            <summary>
            Connection mode
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionNotificationData.ProfileName">
            <summary>
            Associated wireless profile name
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionNotificationData.SSID">
            <summary>
            SSID of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionNotificationData.BssType">
            <summary>
            BSS network type of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ConnectionNotificationData.IsSecurityEnabled">
            <summary>
            Whether security is enabled on this network
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.EapXmlType">
            <summary>
            EAP XML profile type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EapXmlType.Default">
            <summary>
            Default value
            </summary>
            <remarks>No constant in Wlanapi.h, but needed for EAP-TLS; seems to indicate local user only</remarks>
        </member>
        <member name="F:ManagedNativeWifi.EapXmlType.AllUsers">
            <summary>
            Set EAP host data for all users of this profile.
            </summary>
            <remarks>Equivalent to WLAN_SET_EAPHOST_DATA_ALL_USERS</remarks>
        </member>
        <member name="T:ManagedNativeWifi.EncryptionType">
            <summary>
            Data encryption type to be used to connect to wireless LAN
            </summary>
            <remarks>
            Equivalent to encryption element in profile XML:
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/wlan-profileschema-encryption-authencryption-element
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.None">
            <summary>
            None (valid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.WEP">
            <summary>
            WEP encryption for WEP
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.TKIP">
            <summary>
            TKIP encryption for WPA/WPA2
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.AES">
            <summary>
            AES (CCMP) encryption for WPA/WPA2
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceChangedEventArgs">
            <summary>
            Provides data for the InterfaceChanged event.
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceChangedEventArgs.InterfaceId">
            <summary>
            Associated wireless interface ID
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceChangedEventArgs.ChangedState">
            <summary>
            Interface changed state
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.InterfaceChangedEventArgs.#ctor(System.Guid,ManagedNativeWifi.InterfaceChangedState)">
            <summary>
            Initializes a new instance of the <see cref="T:InterfaceChangedEventArgs"/> class.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="changedState">Interface changed state</param>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceChangedState">
            <summary>
            Wireless interface changed state
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceChangedState.Unknown">
            <summary>
            Unknown (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceChangedState.Arrived">
            <summary>
            A wireless interface has been added to or enabled.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceChangedState.Removed">
            <summary>
            A wireless interface has been removed or disabled.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceInfo">
            <summary>
            Wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceInfo.Id">
            <summary>
            Interface ID
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceInfo.Description">
            <summary>
            Interface description
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceInfo.State">
            <summary>
            Interface state
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.InterfaceInfo.#ctor(System.Guid,System.String,ManagedNativeWifi.InterfaceState)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceConnectionInfo">
            <summary>
            Wireless interface and related connection information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceConnectionInfo.ConnectionMode">
            <summary>
            Connection mode
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceConnectionInfo.IsRadioOn">
            <summary>
            Whether the radio of the wireless interface is on
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceConnectionInfo.IsConnected">
            <summary>
            Whether the wireless interface is connected to a wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceConnectionInfo.ProfileName">
            <summary>
            Wireless profile name when the wireless profile is used for the connection
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.InterfaceConnectionInfo.#ctor(ManagedNativeWifi.Win32.NativeMethod.WLAN_INTERFACE_INFO,ManagedNativeWifi.ConnectionMode,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceState">
            <summary>
            Wireless interface state
            </summary>
            <remarks>
            Equivalent to WLAN_INTERFACE_STATE:
            https://docs.microsoft.com/en-us/windows/win32/api/wlanapi/ne-wlanapi-wlan_interface_state
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.NotReady">
            <summary>
            The interface is not ready to operate.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Connected">
            <summary>
            The interface is connected to a network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.AdHocNetworkFormed">
            <summary>
            The interface is the first node in an ad hoc network. No peer has connected.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Disconnecting">
            <summary>
            The interface is disconnecting from the current network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Disconnected">
            <summary>
            The interface is not connected to any network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Associating">
            <summary>
            The interface is attempting to associate with a network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Discovering">
            <summary>
            Auto configuration is discovering the settings for the network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Authenticating">
            <summary>
            The interface is in the process of authenticating.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.NativeWifi">
            <summary>
            A managed implementation of Native Wifi API
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateInterfaces">
            <summary>
            Enumerates wireless interface information.
            </summary>
            <returns>Wireless interface information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateInterfaceConnections">
            <summary>
            Enumerates wireless interface and related connection information.
            </summary>
            <returns>Wireless interface and related connection information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ScanNetworksAsync(System.TimeSpan)">
            <summary>
            Asynchronously requests wireless interfaces to scan wireless LANs.
            </summary>
            <param name="timeout">Timeout duration</param>
            <returns>Interface IDs that successfully scanned</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ScanNetworksAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously requests wireless interfaces to scan wireless LANs.
            </summary>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Interface IDs that successfully scanned</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateAvailableNetworkSsids">
            <summary>
            Enumerates SSIDs of available wireless LANs.
            </summary>
            <returns>SSIDs</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateConnectedNetworkSsids">
            <summary>
            Enumerates SSIDs of connected wireless LANs.
            </summary>
            <returns>SSIDs</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateAvailableNetworks">
            <summary>
            Enumerates wireless LAN information on available networks.
            </summary>
            <returns>Wireless LAN information on available networks</returns>
            <remarks>
            If multiple profiles are associated with a same network, there will be multiple entries with
            the same SSID.
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateAvailableNetworkGroups">
            <summary>
            Enumerates wireless LAN information on available networks and group of associated BSS networks.
            </summary>
            <returns>Wireless LAN information on available networks and group of associated BSS networks</returns>
            <remarks>
            If multiple profiles are associated with a same network, there will be multiple entries with
            the same SSID.
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateBssNetworks">
            <summary>
            Enumerates wireless LAN information on BSS networks.
            </summary>
            <returns>Wireless LAN information on BSS networks</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateProfileNames">
            <summary>
            Enumerates wireless profile names in preference order.
            </summary>
            <returns>Wireless profile names</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateProfiles">
            <summary>
            Enumerates wireless profile information in preference order.
            </summary>
            <returns>Wireless profile information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateProfileRadios">
            <summary>
            Enumerates wireless profile and related radio information in preference order.
            </summary>
            <returns>Wireless profile and related radio information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.SetProfile(System.Guid,ManagedNativeWifi.ProfileType,System.String,System.String,System.Boolean)">
            <summary>
            Sets (adds or overwrites) the content of a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileType">Profile type</param>
            <param name="profileXml">Profile XML</param>
            <param name="profileSecurity">Security descriptor for all-user profile</param>
            <param name="overwrite">Whether to overwrite an existing profile</param>
            <returns>True if successfully set. False if failed.</returns>
            <remarks>
            If the content of the profile XML is not valid, a Win32Exception will be thrown.
            In such case, check the reason code in the message and see
            https://docs.microsoft.com/en-us/windows/win32/nativewifi/wlan-reason-code
            https://technet.microsoft.com/en-us/library/3ed3d027-5ae8-4cb0-ade5-0a7c446cd4f7#BKMK_AppndxE
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.SetProfileEapXmlUserData(System.Guid,System.String,ManagedNativeWifi.EapXmlType,System.String)">
            <summary>
            Sets (add or overwirte) the user data (credentials) for a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="eapXmlType">EAP XML type</param>
            <param name="userDataXml">User data XML</param>
            <returns>True if successfully set. False if failed.</returns>
            <remarks>
            In some cases, this function may return true but fail.
            This was observed when setting EapXmlType.AllUsers, but the certificate
            referenced in the EAP XML was installed in the users' store.
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.SetProfilePosition(System.Guid,System.String,System.Int32)">
            <summary>
            Sets the position of a specified wireless profile in preference order.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="position">Position (starting at 0)</param>
            <returns>True if successfully set. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.RenameProfile(System.Guid,System.String,System.String)">
            <summary>
            Renames a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="oldProfileName">Old profile name</param>
            <param name="newProfileName">New profile name</param>
            <returns>True if successfully renamed. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DeleteProfile(System.Guid,System.String)">
            <summary>
            Deletes a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <returns>True if successfully deleted. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetwork(System.Guid,System.String,ManagedNativeWifi.BssType,System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <param name="bssid">BSSID of the network</param>
            <returns>True if successfully requested the connection. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetworkAsync(System.Guid,System.String,ManagedNativeWifi.BssType,System.TimeSpan)">
            <summary>
            Asynchronously attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <param name="timeout">Timeout duration</param>
            <returns>True if successfully connected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetworkAsync(System.Guid,System.String,ManagedNativeWifi.BssType,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>True if successfully connected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetworkAsync(System.Guid,System.String,ManagedNativeWifi.BssType,System.Net.NetworkInformation.PhysicalAddress,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <param name="bssid">BSSID of the network</param>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>True if successfully connected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DisconnectNetwork(System.Guid)">
            <summary>
            Disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if successfully requested the disconnection. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DisconnectNetworkAsync(System.Guid,System.TimeSpan)">
            <summary>
            Asynchronously disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="timeout">Timeout duration</param>
            <returns>True if successfully disconnected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DisconnectNetworkAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>True if successfully disconnected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.GetInterfaceRadio(System.Guid)">
            <summary>
            Gets wireless interface radio information of a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>Wireless interface radio information if succeeded. Null if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.TurnOnInterfaceRadio(System.Guid)">
            <summary>
            Turns on the radio of a specified wireless interface (software radio state only).
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if successfully changed radio state. False if failed.</returns>
            <exception cref="T:System.UnauthorizedAccessException">
            If the user is not logged on as a member of Administrators group.
            </exception>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.TurnOffInterfaceRadio(System.Guid)">
            <summary>
            Turns off the radio of a specified wireless interface (software radio state only).
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if successfully changed radio state. False if failed.</returns>
            <exception cref="T:System.UnauthorizedAccessException">
            If the user is not logged on as a member of Administrators group.
            </exception>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.IsInterfaceAutoConfig(System.Guid)">
            <summary>
            Checks if automatic configuration of a specified wireless interface is enabled.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if enabled. False if disabled or failed to check.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.TryDetectBandChannel(System.UInt32,System.Single@,System.Int32@)">
            <summary>
            Attempts to detect frequency band and channel from center frequency.
            </summary>
            <param name="frequency">Center frequency (KHz)</param>
            <param name="band">Frequency band (GHz)</param>
            <param name="channel">Channel</param>
            <returns>True if successfully detected. False if failed.</returns>
            <remarks>
            This method is marked as internal for unit test.
            As for 5GHz, this method may produce a channel number which is not actually in use.
            Some channel numbers of 5GHz overlap those of 3.6GHz. In such cases, refer frequency band
            to distinguish them.
            </remarks>
        </member>
        <member name="T:ManagedNativeWifi.NativeWifiPlayer">
            <summary>
            An instantiatable implementation of Native Wifi API
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.NetworkRefreshed">
            <summary>
            Occurs when wireless LAN list is refreshed.
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.AvailabilityChanged">
            <summary>
            Occurs when availability of a wireless LAN is changed.
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.InterfaceChanged">
            <summary>
            Occurs when a wireless interface is added/removed/enabled/disabled
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.ConnectionChanged">
            <summary>
            Occurs when connection of a wireless interface is changed.
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.ProfileChanged">
            <summary>
            Occurs when a wireless profile or wireless profile name is changed.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Whether to dispose managed resources</param>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateInterfaces">
            <summary>
            Enumerates wireless interface information.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateInterfaceConnections">
            <summary>
            Enumerates wireless interface and related connection information.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.ScanNetworksAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously requests wireless interfaces to scan wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateAvailableNetworkSsids">
            <summary>
            Enumerates SSIDs of available wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateConnectedNetworkSsids">
            <summary>
            Enumerates SSIDs of connected wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateAvailableNetworks">
            <summary>
            Enumerates wireless LAN information on available networks.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateAvailableNetworkGroups">
            <summary>
            Enumerates wireless LAN information on available networks and group of associated BSS networks.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateBssNetworks">
            <summary>
            Enumerates wireless LAN information on BSS networks.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateProfileNames">
            <summary>
            Enumerates wireless profile names in preference order.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateProfiles">
            <summary>
            Enumerates wireless profile information in preference order.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateProfileRadios">
            <summary>
            Enumerates wireless profile and related radio information in preference order.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.SetProfile(System.Guid,ManagedNativeWifi.ProfileType,System.String,System.String,System.Boolean)">
            <summary>
            Sets (adds or overwrites) the content of a specified wireless profile.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.SetProfilePosition(System.Guid,System.String,System.Int32)">
            <summary>
            Sets the position of a specified wireless profile in preference order.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.SetProfileEapXmlUserData(System.Guid,System.String,ManagedNativeWifi.EapXmlType,System.String)">
            <summary>
         